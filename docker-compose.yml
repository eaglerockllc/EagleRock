version: "3.9"
services:
  db:
    image: postgres:16-alpine
    container_name: eaglerock-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 20

  redis:
    image: redis:7-alpine
    container_name: eaglerock-redis
    ports:
      - "6379:6379"

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: eaglerock-api
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "8080:8080"
    command: ["bash","-lc","uvicorn app.entrypoints.api.main:app --host 0.0.0.0 --port 8080"]

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: eaglerock-worker
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    command: ["python","-m","app.entrypoints.worker.run"]

volumes:
  db_data:
